{
  "openapi": "3.0.3",
  "info": {
    "title": "MCP OData Bridge",
    "version": "1.0.0"
  },
  "paths": {
    "/services": {
      "get": {
        "summary": "Services",
        "operationId": "services_services_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Services Services Get"
                }
              }
            }
          }
        }
      }
    },
    "/services/{service}/metadata": {
      "get": {
        "summary": "Metadata",
        "operationId": "metadata_services__service__metadata_get",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Metadata Services  Service  Metadata Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{service}/{entity}({keys})": {
      "get": {
        "summary": "Get Entity",
        "operationId": "get_entity__service___entity___keys___get",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity"
            }
          },
          {
            "name": "keys",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Keys"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Expand",
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Entity  Service   Entity   Keys   Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{service}/{entity}": {
      "get": {
        "summary": "List Entities",
        "operationId": "list_entities__service___entity__get",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          },
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity"
            }
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Filter",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "$top",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Top",
              "type": "integer",
              "nullable": true
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Skip",
              "type": "integer",
              "nullable": true
            }
          },
          {
            "name": "$orderby",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Orderby",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Expand",
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "$count",
            "in": "query",
            "required": false,
            "schema": {
              "title": "$Count",
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Entities  Service   Entity  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invoke": {
      "post": {
        "summary": "Invoke",
        "operationId": "invoke_invoke_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Invoke Invoke Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{service}/function/{name}": {
      "post": {
        "summary": "Call Function",
        "operationId": "call_function__service__function__name__post",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Call Function  Service  Function  Name  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}